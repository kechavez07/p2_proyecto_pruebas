# .github/workflows/cd.yml

name: Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  # Job para pruebas del Backend (sin cambios)
  test-backend:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      DB_HOST: 127.0.0.1
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: testdb
      DB_PORT: 3306
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is ready"; break;
            fi;
            echo "Waiting for MySQL..."; sleep 5;
          done
      - name: Run backend tests
        run: npm test

  # Job para pruebas del Frontend (sin cambios)
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm install
      - name: Run frontend tests
        run: npm test
      - name: Check build
        run: npm run build
  
  # --- NUEVO JOB PARA K6 ---
  performance-test-k6:
    name: Performance Test (k6)
    runs-on: ubuntu-latest
    # Se ejecuta después de las pruebas del backend para asegurar que la API está validada
    needs: [test-backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run k6 performance test
        uses: grafana/k6-action@v0.3.1
        with:
          # Le decimos a k6 dónde encontrar el script
          filename: k6/script.js
        env:
          # Le pasamos la URL de tu API en Render al script a través de un secret
          API_URL: ${{ secrets.RENDER_API_URL }}

  # Job de Despliegue (actualizado para depender de k6)
  deploy:
    runs-on: ubuntu-latest
    # CONDICIÓN CLAVE: El despliegue ahora necesita que las 3 pruebas pasen
    needs: [test-backend, test-frontend, performance-test-k6] # <-- AÑADIDO 'performance-test-k6'
    if: github.ref == 'refs/heads/main' && success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy Frontend to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: Deploy Backend to Render
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -H "Accept: application/json" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -d '{"clearCache": "do_not_clear"}'